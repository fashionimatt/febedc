package client;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Scanner;

//	사용자가 입력한 문자열을 서버로 전송하는 스레드
class WriteThread{
	Socket sock;
	ClientGUI cgui;
	String msg;
	String Id;
	
	public WriteThread(ClientGUI cgui) {
		this.cgui = cgui;
		this.sock = cgui.sock;
	}
	
	public void sendMsg(){
		//사용자가 입력하는 값을 읽어오기 위한 입력 스트림 생성
		DataInputStream dis = new DataInputStream(System.in);
		DataOutputStream dos = null;
		try {
			//서버로 사용자의 입력 값을 전송하기 위한 출력 스트림 생성
			dos = new DataOutputStream(sock.getOutputStream());
			//첫번째로 보내는 정보는 id 와 ip.
			InetAddress addr = sock.getInetAddress();
			String ip = addr.getHostAddress();
			if(cgui.isFirst == true){
				getId();
				System.out.println("<ip> : "+ ip + " <id> : " + Id);
				//얻어낸 ip와 id를 콘솔에 표기
				msg = "["+Id+"] 님이 접속하셨습니다 (" + ip + ")";
			//처음 접속한 상황에서는 접속했다는 문구를 띄어주지만
			// 그 다음부터는 사용자가 입력한 값을 띄어줌
			} else {
				msg = "["+Id+"] " + cgui.chatField.getText();
			}
			//입력된 문자열 서버로 전송!
			dos.writeUTF(msg);
		} catch (IOException e) {
			e.printStackTrace();
		} finally{
			try {
				if(dis!=null)dis.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
			
		}
	}

	private void getId() {
		Id = StartScreen.getId();
	}
}

class ReadThread extends Thread{
	Socket sock;
	ClientGUI cgui;
	public ReadThread(Socket sock, ClientGUI cgui) {
		this.sock = sock;
		this.cgui = cgui;
	}
	@Override
	public void run() {
		DataInputStream dis = null;
		try {
			dis = new DataInputStream(sock.getInputStream());
			while(true){
				String str = dis.readUTF();
				if(str==null){
					System.out.println("Connection Lost..");
					break;
				}
				cgui.chatArea.append(str+"\n");
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}
}


public class ClientServer {

	public static void main(String[] args) {
		
		String ip = "192.168.1.71";
		int port = 5100;
		Socket sock = null;
		ClientGUI cgui;
			
			try {
				sock = new Socket(ip,port);
				System.out.println("Connection is Successful...");
				cgui = new ClientGUI(sock);
				new ReadThread(sock, cgui).start();
				
			} catch (UnknownHostException e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			}
		
	}

}
